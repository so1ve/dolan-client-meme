name: Deploy

on: [push, workflow_dispatch]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      NITRO_PRESET: deno
      NODE_OPTIONS: --max_old_space_size=8192

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.4.1

      - name: Set node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Install
        run: nci

      - name: Build
        run: nr build:all

      - name: Deploy to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: ${{ secrets.DENO_DEPLOY_PROJECT_NAME }}
          entrypoint: server/index.ts
          root: .output

  deploy-static:
    if: github.repository == 'so1ve/dolan-client-meme'
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Allows authentication with Deno Deploy.
      contents: read # Allows cloning the repo.

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.4.1

      - name: Set node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Install
        run: nci

      - name: Build static
        run: nr build:copy-shiki-assets

      - name: Deploy to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: dolan-client-meme-static
          entrypoint: https://deno.land/std/http/file_server.ts
          root: static
